version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  frontend:
    build:
      context: ./apps/frontend
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev

  auth_postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: market_focus_auth_db
      POSTGRES_USER: market_focus_auth_admin
      POSTGRES_PASSWORD: vP9#L2@xTf$8Rm
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./apps/auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth_postgres:5432/market_focus_auth_db
      - SPRING_DATASOURCE_USERNAME=market_focus_auth_admin
      - SPRING_DATASOURCE_PASSWORD=vP9#L2@xTf$8Rm
    depends_on:
      - auth_postgres
  api-gateway:
    build:
      context: ./apps/api-gateway
    ports:
      - "8080:8080"

  websocket-service:
    build:
      context: ./apps/websocket-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka

  news-service:
    build:
      context: ./apps/news-service
    ports:
      - "8084:8084"
    depends_on:
      - kafka
    environment:
      - NEWSAPI_KEY=${NEWSAPI_KEY}
  market-service:
    build:
      context: ./apps/market-service
    ports:
      - "8085:8085"
    depends_on:
      - kafka
    environment:
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
volumes:
  pgdata:
